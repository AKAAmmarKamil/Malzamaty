// <auto-generated />
using System;
using Malzamaty.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Malzamaty.Migrations
{
    [DbContext(typeof(TheContext))]
    partial class TheContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Malzamaty.Model.Class", b =>
                {
                    b.Property<string>("C_ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("C_Name");

                    b.Property<string>("C_Stage");

                    b.Property<string>("C_Type");

                    b.Property<string>("Co_ID");

                    b.HasKey("C_ID");

                    b.HasIndex("Co_ID");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("Malzamaty.Model.Country", b =>
                {
                    b.Property<string>("Co_ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Co_Name");

                    b.HasKey("Co_ID");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Malzamaty.Model.Exist", b =>
                {
                    b.Property<string>("E_ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("C_ID");

                    b.Property<string>("Su_ID");

                    b.HasKey("E_ID");

                    b.HasIndex("C_ID");

                    b.HasIndex("Su_ID");

                    b.ToTable("Exist");
                });

            modelBuilder.Entity("Malzamaty.Model.File", b =>
                {
                    b.Property<string>("F_ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("C_ID");

                    b.Property<string>("F_Author");

                    b.Property<string>("F_Description");

                    b.Property<byte[]>("F_File");

                    b.Property<string>("F_Format");

                    b.Property<DateTimeOffset>("F_PublishDate");

                    b.Property<string>("F_Type");

                    b.Property<string>("St_ID");

                    b.Property<string>("Su_ID");

                    b.HasKey("F_ID");

                    b.HasIndex("C_ID");

                    b.HasIndex("St_ID");

                    b.HasIndex("Su_ID");

                    b.ToTable("File");
                });

            modelBuilder.Entity("Malzamaty.Model.Rating", b =>
                {
                    b.Property<string>("Ra_ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("F_ID");

                    b.Property<string>("Ra_Comment");

                    b.Property<int>("Ra_Rate");

                    b.Property<string>("St_ID");

                    b.HasKey("Ra_ID");

                    b.HasIndex("F_ID");

                    b.HasIndex("St_ID");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("Malzamaty.Model.Report", b =>
                {
                    b.Property<string>("R_ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("F_ID");

                    b.Property<DateTimeOffset>("R_Date");

                    b.Property<string>("R_Description");

                    b.HasKey("R_ID");

                    b.HasIndex("F_ID");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("Malzamaty.Model.Schedule", b =>
                {
                    b.Property<string>("Sc_ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("FinishStudy");

                    b.Property<string>("St_ID");

                    b.Property<DateTime?>("StartStudy");

                    b.Property<string>("Su_ID");

                    b.HasKey("Sc_ID");

                    b.HasIndex("St_ID");

                    b.HasIndex("Su_ID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Malzamaty.Model.Student", b =>
                {
                    b.Property<string>("St_ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("C_ID");

                    b.Property<string>("St_Authentication");

                    b.Property<string>("St_Email");

                    b.Property<string>("St_FullName");

                    b.Property<string>("St_Password");

                    b.Property<string>("Su_ID");

                    b.HasKey("St_ID");

                    b.HasIndex("C_ID");

                    b.HasIndex("Su_ID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Malzamaty.Model.Subject", b =>
                {
                    b.Property<string>("Su_ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Su_Name");

                    b.HasKey("Su_ID");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Malzamaty.Model.Class", b =>
                {
                    b.HasOne("Malzamaty.Model.Country", "Country")
                        .WithMany()
                        .HasForeignKey("Co_ID");
                });

            modelBuilder.Entity("Malzamaty.Model.Exist", b =>
                {
                    b.HasOne("Malzamaty.Model.Class", "Class")
                        .WithMany()
                        .HasForeignKey("C_ID");

                    b.HasOne("Malzamaty.Model.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("Su_ID");
                });

            modelBuilder.Entity("Malzamaty.Model.File", b =>
                {
                    b.HasOne("Malzamaty.Model.Class", "Class")
                        .WithMany()
                        .HasForeignKey("C_ID");

                    b.HasOne("Malzamaty.Model.Student", "Student")
                        .WithMany()
                        .HasForeignKey("St_ID");

                    b.HasOne("Malzamaty.Model.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("Su_ID");
                });

            modelBuilder.Entity("Malzamaty.Model.Rating", b =>
                {
                    b.HasOne("Malzamaty.Model.File", "File")
                        .WithMany()
                        .HasForeignKey("F_ID");

                    b.HasOne("Malzamaty.Model.Student", "Student")
                        .WithMany()
                        .HasForeignKey("St_ID");
                });

            modelBuilder.Entity("Malzamaty.Model.Report", b =>
                {
                    b.HasOne("Malzamaty.Model.File", "File")
                        .WithMany()
                        .HasForeignKey("F_ID");
                });

            modelBuilder.Entity("Malzamaty.Model.Schedule", b =>
                {
                    b.HasOne("Malzamaty.Model.Student", "Student")
                        .WithMany()
                        .HasForeignKey("St_ID");

                    b.HasOne("Malzamaty.Model.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("Su_ID");
                });

            modelBuilder.Entity("Malzamaty.Model.Student", b =>
                {
                    b.HasOne("Malzamaty.Model.Class", "Class")
                        .WithMany()
                        .HasForeignKey("C_ID");

                    b.HasOne("Malzamaty.Model.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("Su_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
