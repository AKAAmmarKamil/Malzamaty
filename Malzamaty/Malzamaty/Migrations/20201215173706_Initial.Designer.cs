// <auto-generated />
using System;
using Malzamaty.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Malzamaty.Migrations
{
    [DbContext(typeof(TheContext))]
    [Migration("20201215173706_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Malzamaty.Model.Class", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("Co_ID");

                    b.Property<string>("Name");

                    b.Property<string>("Stage");

                    b.Property<string>("Type");

                    b.HasKey("ID");

                    b.HasIndex("Co_ID");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("Malzamaty.Model.Country", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Malzamaty.Model.Exist", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("C_ID");

                    b.Property<Guid>("Su_ID");

                    b.HasKey("ID");

                    b.HasIndex("C_ID");

                    b.HasIndex("Su_ID");

                    b.ToTable("Exist");
                });

            modelBuilder.Entity("Malzamaty.Model.File", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<Guid>("C_ID");

                    b.Property<Guid?>("ClassID");

                    b.Property<string>("Description");

                    b.Property<string>("FilePath");

                    b.Property<string>("Format");

                    b.Property<DateTimeOffset>("PublishDate");

                    b.Property<Guid>("Su_ID");

                    b.Property<Guid?>("SubjectID");

                    b.Property<string>("Type");

                    b.Property<Guid?>("Us_ID");

                    b.HasKey("ID");

                    b.HasIndex("ClassID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("Us_ID");

                    b.ToTable("File");
                });

            modelBuilder.Entity("Malzamaty.Model.Interests", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("C_ID");

                    b.Property<Guid>("Su_ID");

                    b.Property<Guid>("U_ID");

                    b.HasKey("ID");

                    b.HasIndex("C_ID");

                    b.HasIndex("Su_ID");

                    b.HasIndex("U_ID");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("Malzamaty.Model.Rating", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<Guid>("F_ID");

                    b.Property<Guid?>("FileID");

                    b.Property<int>("Rate");

                    b.Property<Guid?>("Us_ID");

                    b.HasKey("ID");

                    b.HasIndex("FileID");

                    b.HasIndex("Us_ID");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("Malzamaty.Model.Report", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("Description");

                    b.Property<Guid>("F_ID");

                    b.HasKey("ID");

                    b.HasIndex("F_ID");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("Malzamaty.Model.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Role");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Malzamaty.Model.Schedule", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("FinishStudy");

                    b.Property<Guid?>("St_ID");

                    b.Property<DateTime?>("StartStudy");

                    b.Property<Guid?>("Su_ID");

                    b.HasKey("ID");

                    b.HasIndex("St_ID");

                    b.HasIndex("Su_ID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Malzamaty.Model.Subject", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Malzamaty.Model.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("Authentication");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("Password");

                    b.HasKey("ID");

                    b.HasIndex("Authentication");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Malzamaty.Model.Class", b =>
                {
                    b.HasOne("Malzamaty.Model.Country", "Country")
                        .WithMany()
                        .HasForeignKey("Co_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Malzamaty.Model.Exist", b =>
                {
                    b.HasOne("Malzamaty.Model.Class", "Class")
                        .WithMany()
                        .HasForeignKey("C_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Malzamaty.Model.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("Su_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Malzamaty.Model.File", b =>
                {
                    b.HasOne("Malzamaty.Model.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassID");

                    b.HasOne("Malzamaty.Model.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID");

                    b.HasOne("Malzamaty.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("Us_ID");
                });

            modelBuilder.Entity("Malzamaty.Model.Interests", b =>
                {
                    b.HasOne("Malzamaty.Model.Class", "Class")
                        .WithMany()
                        .HasForeignKey("C_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Malzamaty.Model.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("Su_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Malzamaty.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("U_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Malzamaty.Model.Rating", b =>
                {
                    b.HasOne("Malzamaty.Model.File", "File")
                        .WithMany()
                        .HasForeignKey("FileID");

                    b.HasOne("Malzamaty.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("Us_ID");
                });

            modelBuilder.Entity("Malzamaty.Model.Report", b =>
                {
                    b.HasOne("Malzamaty.Model.File", "File")
                        .WithMany()
                        .HasForeignKey("F_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Malzamaty.Model.Schedule", b =>
                {
                    b.HasOne("Malzamaty.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("St_ID");

                    b.HasOne("Malzamaty.Model.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("Su_ID");
                });

            modelBuilder.Entity("Malzamaty.Model.User", b =>
                {
                    b.HasOne("Malzamaty.Model.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("Authentication")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
